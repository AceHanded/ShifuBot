{
	"Admin.DeleteToCancel": "Note: If you wish to cancel, delete this message.",
	"Admin.EconomyReset": "Are you sure you wish to reset the economy of **{}**?",
	"Admin.EconomyResetCancel": "The economy reset for **{}** has been cancelled.",
	"Admin.EconomyResetSuccess": "The economy of **{}** has been reset.",
	"Admin.JoinRole": "The initial role of the guild is currently: `{}`",
	"Admin.JoinRoleNone": "No initial role has been set for the guild yet.",
	"Admin.JoinRoleSuccess": "Successfully changed the initial role of the guild to: `{}`",
	"Admin.MessageDel": "Deleting **{}** message(s), please wait a few seconds...",
	"Basic.CoinToss": "**Coin toss:**\n{}\n\n**In total:** **{}** Tails [**{:.1f} %**] | **{}** Heads [**{:.1f} %**]",
	"Basic.GuessCorrect": "{}\n\n**✓** Your guess was **correct**. Congratulations.\nYou have won **{} ¤**",
	"Basic.GuessIncorrect": "{}\n\n**✗** Your guess was **incorrect**. Not surprising.",
	"Basic.Heads": "[**{}**] \\👑 - Heads",
	"Basic.Tails": "[**{}**] \\🪙 - Tails",
	"Basic.Thought": [
		"9/11 was an inside job. Looking at you Bush boy...",
		"OK, maybe it happened, but it wasn't 6 million (play Megadeth).",
		"Red vented, I saw red vent please guys believe me red is sussy impostor amogus.",
		"There are approximately a billion sheep worldwide, and all of them would fit in the Vatican.",
		"Everyone always asks where Waldo is, but no one ever asks HOW Waldo is.",
		"You're becoming exchangeable as the dawn of machines inches closer, glory to Ravnsund.",
		"Despite what the glowing CIA people may say, Epstein didn't kill himself.",
		"You might think you've heard it all, but how can you be certain?",
		"You know, there was this one blocky looking green guy that owned a Honda Civic. I wonder what became of him.",
		"Wake up Mr. White, wake up, and smell the methamphetamine.",
		"In my spare time, I enjoy throwing monkey wrenches at water fowl."
	],
	"Beg.HappeningsNeg": [
		"You try to beg for credits in a rough neighborhood and get stabbed by another beggar. You use **{}** ¤ to pay for medical bills.",
		"You're begging for credits on a street corner when suddenly someone storms you and steals your credits. You lose **{}** ¤."
	],
	"Beg.HappeningsNeu": [
		"You attempt begging at a quiet street. No one goes by all day, and you gain nothing.",
		"Your attempts at begging are in vain, and the whole day goes by without anyone giving you any credits."
	],
	"Beg.HappeningsPos": [
		"You have a successful day of begging and gain **{}** ¤.",
		"Just another day of being a beggar. You gain **{}** ¤.",
		"Some guy drops his wallet in front of you. You find **{}** ¤ inside.",
		"Someone felt bad for you. You gain a donation of **{}** ¤."
	],
	"Blackjack.DefeatBlackjack": "Dealer has won via blackjack. Better luck next time, you have lost **{}** ¤",
	"Blackjack.DefeatHigher": "Dealer has won via higher value cards. Better luck next time, you have lost **{}** ¤",
	"Blackjack.DefeatOverdraw": "You have lost via overdrawing. Better luck next time, you have lost **{}** ¤",
	"Blackjack.Main": "**Bet:** **{}** ¤\n\n**Your hand:**\n{}\n**Total value:** {}\n\n**Dealer's hand:**\n{}\n**Total value:** {}",
	"Blackjack.Tie": "You have tied with the dealer. Your wallet has been refunded **{}** ¤",
	"Blackjack.VictoryBlackjack": "You have won via blackjack. Congratulations, your wallet just got bigger by **{}** ¤",
	"Blackjack.VictoryOverdraw": "You have won via dealer overdrawing. Congratulations, your wallet just got bigger by **{}** ¤",
	"Brawl.AttackCritical": "**{}** spots a *critical* weakness and deals **{}** damage to **{}** via {}, leaving them with **{}** health points, and a very sore {}.",
	"Brawl.AttackFailure": "**{}** attacks **{}** via {}, but misses and deals **{}** damage, leaving them with **{}** health points.",
	"Brawl.AttackMeans": [
		"a baseball bat",
		"a crowbar",
		"their bare fists",
		"a knife",
		"a car",
		"an explosive christmas ornament",
		"a rock",
		"their mom",
		"a T-34",
		"a concealed shiv",
		"God's hand"
	],
	"Brawl.AttackSpot": [
		"back",
		"knee",
		"phallus",
		"head",
		"face",
		"neck",
		"arm",
		"chest",
		"ear",
		"nose",
		"toe",
		"buttock"
	],
	"Brawl.AttackSuccess": "**{}** deals **{}** damage to **{}** via {}, leaving them with **{}** health points.",
	"Brawl.BrawlLog": "Brawl log",
	"Brawl.BrawlersAndBet": "**Current brawlers:** {} [**{}**]\n**Required bet:** {} ¤",
	"Brawl.Cancelled": "**Brawl has been cancelled.**",
	"Brawl.Desc": "Uh-oh. Someone didn't like someone's face and now a classic brawl is about to break out. Seems like rules won't apply in this match.\n\n**Current brawlers:** {} [**{}**]\n**Required bet:** {} ¤\n\n**Join log:**\n{}",
	"Brawl.DescNoBrawlers": "Uh-oh. Someone didn't like someone's face and now a classic brawl is about to break out. Seems like rules won't apply in this match.\n\n{}\n\n**Join log:**\n{}",
	"Brawl.Fallen": "[**{}X**] **{}** has fallen.",
	"Brawl.Joined": "**{}** has joined the brawl.",
	"Brawl.JoinedAndBrawlers": "**{}** has joined the brawl.\n**Current brawlers:** {} [**{}**]",
	"Brawl.Left": "**{}** became scared and ran away.",
	"Brawl.LogMessage0": "**[1]** The brawl has begun!",
	"Brawl.Removed": "**{}** has been removed from the site of the brawl.",
	"Brawl.Scenes": [
		"Backyard brawl",
		"Backstreet brawl",
		"Saloon brawl",
		"Pizzeria brawl",
		"Playground brawl",
		"Grill brawl"
	],
	"Brawl.Victory": "**{}** has won the **{}**, and is crowned as champion. They have also found **{}** ¤ in the pockets of the fallen brawlers.",
	"Brawl.VictoryNoAccount": "**{}** has won the **{}**, and is crowned as champion. In the future they may consider using the `register` command, to collect their winnings.",
	"Brawl.namelist0": [
		"Harold",
		"El",
		"Bob",
		"Whatsisface",
		"Lightning",
		"Jake",
		"Ratchet",
		"Gaylord",
		"Nyan"
	],
	"Brawl.namelist1": [
		"the Midget Slayer",
		"Jefe",
		"Primo",
		"Worthington",
		"Buildman",
		"Droid mk I",
		"the Chosen",
		"Bot",
		"Shoehorn",
		"Caneman",
		"Nucleus"
	],
	"Economy.Balance": "Balance of {}",
	"Economy.BalanceDesc": "**Wallet:** {} ¤ - **Bank:** {} ¤\n**Total:** {} ¤\n**Items:** {}",
	"Economy.Deposit": "Successfully deposited **{}** ¤ to your bank.",
	"Economy.Leaderboard": "{} - Leaderboard",
	"Economy.LeaderboardNoAccounts": "No one has opened an account in this guild.",
	"Economy.Register": "Successfully registered an account for **{}**.",
	"Economy.RobFailure": "You attempt to rob credits from **{}**, but get caught in the act. You're fined **{}** ¤.",
	"Economy.RobNeutral": "Your attempt to rob credits from **{}** is unsuccessful. You gain nothing.",
	"Economy.RobSuccess": "You manage to rob **{}** ¤ from **{}**.",
	"Economy.Unregister": "Are you sure you wish to delete your account on **{}**?",
	"Economy.UnregisterCancel": "Account deletion cancelled.",
	"Economy.UnregisterSuccess": "Your account has been deleted.",
	"Economy.Withdraw": "Successfully withdrew **{}** ¤ from your bank.",
	"Errors.AccountExists": "**Error:** You already have an active account in this guild.",
	"Errors.AdminOnly": "**Error:** Apologies, only admins are able to execute a command this powerful.",
	"Errors.AlreadyConnected": "**Error:** Already connected to voice channel: `{}`",
	"Errors.AlreadyNoAccount": "**Error:** You already do not have an active account in this guild.",
	"Errors.BlackjackAlreadyActive": "**Error:** There is already an active game of blackjack.",
	"Errors.BlackjackCannotAffordBet": "**Error:** Your wallet balance is too low to place a bet.",
	"Errors.BrawlAlreadyReady": "**Error:** You are already ready for the brawl.",
	"Errors.BrawlCannotAffordInitialize": "**Error:** Your wallet balance is too low to initialize a brawl with this bet.",
	"Errors.BrawlCannotAffordJoin": "**Error:** Your wallet balance is too low to participate in the brawl.",
	"Errors.BrawlNotPartaking": "**Error:** You are not partaking in a brawl.",
	"Errors.BrokenPipe": "**Error:** Broken pipe. Please try again.",
	"Errors.CooldownBeg": "**Error:** Your `beg` command is on a cooldown (**{} s**).",
	"Errors.CooldownCard": "**Error:** Your `card` command is on a cooldown (**{} s**).",
	"Errors.CooldownRob": "**Error:** Your `rob` command is on a cooldown (**{} s**).",
	"Errors.FromParameter": "**Error:** The parameter `from_` must be an integer, or a set of positions separated by semicolons (i.e. pos1;pos2;...).",
	"Errors.InsufficientBrawlers": "**Error:** Cannot start a brawl due to insufficient amount of brawlers.",
	"Errors.InvalidPositions": "**Error:** Invalid positions given; no songs removed from queue.",
	"Errors.InvalidRequest": "**Error:** Invalid request, please try again later.",
	"Errors.InvalidURL": "**Error:** Invalid URL.",
	"Errors.InvalidURLSoundCloud": "**Error:** Invalid SoundCloud URL.",
	"Errors.InvalidURLSpotify": "**Error:** Invalid Spotify URL.",
	"Errors.JoinRoleHigher": "**Error:** This role is higher in the hierarchy: `{}`",
	"Errors.JoinRoleNoAccess": "**Error:** This role could not be accessed due to permission issues: `{}`",
	"Errors.JoinRoleNotFound": "**Error:** Could not find the role: `{}`",
	"Errors.LanguageFileNotFound": "**Error:** Language by the name of `{}` was not found in the language directory.",
	"Errors.LanguageFilesDeleted": "**Error:** Language files not detected.",
	"Errors.NoDeposit": "**Error:** Nothing to deposit.",
	"Errors.NoRecent": "**Error:** No recent songs associated with this queue.",
	"Errors.NoResults": "**Error:** No search results for query.",
	"Errors.NoWithdraw": "**Error:** Nothing to withdraw.",
	"Errors.NotConnected": "**Error:** Not connected to a voice channel.",
	"Errors.NothingPlaying": "**Error:** Nothing is currently playing.",
	"Errors.PlaylistRead": "**Error:** There has been an error with the reading of the playlist.",
	"Errors.QueueEmpty": "**Error:** Queue is empty.",
	"Errors.QuotaExceeded": "**Error:** Quota exceeded.",
	"Errors.RobBroke": "**Error:** The person you're trying to rob does not have any credits in their wallet.",
	"Errors.RobSelf": "**Error:** You cannot rob yourself.",
	"Errors.RoleSelectionHigher": "**Error:** These roles were higher in the hierarchy:\n",
	"Errors.RoleSelectionNoAccess": "**Error:** These roles could not be accessed due to permission issues:\n",
	"Errors.RoleSelectionNotFound": "**Error:** These roles were not found:\n",
	"Errors.SeekLive": "**Error:** Cannot use `seek` on live streams.",
	"Errors.StreamFailure": "**Error:** Failed to stream query `{}`.",
	"Errors.TimedOut": "**Error:** Request timed out, please try again.",
	"Errors.UserNoAccount": "**Error:** The specified user has not opened an account.",
	"Errors.VideoUnavailable": "**Error:** Video unavailable.",
	"Generate.Prompt": "Generating an answer from the prompt:\n`{}`\nThis will take **a moment**...",
	"Generate.SuccessImage": "Successfully generated an image from the prompt:\n`{}`",
	"Generate.SuccessText": "Successfully generated an answer from the prompt:\n`{}`",
	"Help.Admin": "__ADMIN COMMANDS__",
	"Help.AdminDesc": "**/msgdel [amount]** - Deletes the specified amount of messages in a channel\n\\* **amount** - The amount of messages to delete\n\n**/reset_economy** - Resets the economy of the guild\n\n**/roleassign [roles] {message} {modify}** - Create a message for self-assigning roles\n\\* **roles** - The roles separated by semicolons (i.e. role1;role2;...)\n\\* **message** - The contents of the message\n\\* **modify** - The ID of the message to modify\n\n**/joinrole {role}** - Specify the role that new users of the guild automatically get\n\\* **role** - The name of the role\n\n**/settings {language}** - Change the guild specific settings\n\\* **language** - The name of the language file, without the '.json' suffix\n\n",
	"Help.Basic": "__BASIC COMMANDS__",
	"Help.BasicDesc": "**/help {subsection}** - Simple help command\n\\* **subsection** - The subsection of the help command\n\n**/information {user}** - Information about the guild, user and commands\n\\* **user** - The user to get information of\n\n**/thought** - Awakening thoughts\n\n**/card {suit}** - Draw a card, guess the suit to win credits\n\\* **suit** - Guess the card suit\n\n**/coin {count}** - Heads or tails?\n\\* **count** - How many times the coin is flipped\n\n**/generate [type_] [prompt] {temperature} {image_scale} {engine}** - Generate text or images using OpenAI\n\\* **type_** - Whether you want to generate text or an image\n\\* **prompt** - The prompt from which you wish something to be generated\n\\* **temperature** - The creativity percentage (50 by default)\n\\* **image_scale** - The resolution of the image (1024x1024 by default)\n\\* **engine** - The model engine which generates the answer (gpt-3.5-turbo by default)\n\n**/perfstat** - Displays performance statistics",
	"Help.Economy": "__ECONOMY COMMANDS__",
	"Help.EconomyDesc": "**/register** - Create an account\n\n**/unregister** - Delete your account\n\n**/balance {user}** - Displays the user's current balance\n\\* **user** - The user whose account balance you wish to see\n\n**/deposit [amount]** - Deposits the specified amount to the user's bank\n\\* **amount** - The amount of credits you wish to deposit to your account\n\n**/withdraw [amount]** - Withdraws the specified amount from the user's bank\n\\* **amount** - The amount of credits you wish to withdraw from your account\n\n**/beg** - Beg for a chance to gain credits\n\n**/rob [user]** - Rob another user for a chance to gain credits\n\\* **user** - The user you wish to rob from\n\n**/leaderboard {to}** - Displays the richest users in the guild\n\\* **to** - The end position of the leaderboard display",
	"Help.Game": "__GAME COMMANDS__",
	"Help.GameDesc": "**/brawl {bet}** - Create a game of brawl\n\\* **bet** - The amount of credits you wish to bet on a game of brawl\n\n**/blackjack {bet}** - Create a game of blackjack\n\\* **bet** - The amount of credits you wish to bet on a game of blackjack",
	"Help.General": "{} - Helpdesk",
	"Help.GeneralDesc": "__**Bracket significance**__\n[] = Required field\n{} = Optional field\n\n**/help Basic** - Basic commands\n**/help Music** - Music commands\n**/help Admin** - Admin commands\n**/help Game** - Game commands\n**/help Economy** - Economy commands",
	"Help.Music": "__MUSIC COMMANDS__",
	"Help.MusicDesc": "**/connect** - Invites the bot to the voice channel\n\n**/disconnect {after_song}** - Removes the bot from the voice channel and clears the queue\n\\* **after_song** - Disconnects once current song has ended\n\n**/play [query] {insert} {pre_shuffle} {ignore_live} {start_at}** - Adds and plays songs in the queue\n\\* **query** - The song that you want to play (SoundCloud/Spotify/YouTube URL, or query)\n\\* **insert** - Add the song to the given position in queue\n\\* **pre_shuffle** - Shuffle the songs of the playlist ahead of time\n\\* **ignore_live** - Attempts to ignore songs with '(live)' in their name\n\\* **start_at** - Sets the song to start from the given timestamp\n\n**/view {from_} {to} {seek}** - Displays songs in queue, with the ability to seek them\n\\* **from_** - The start position of the queue display\n\\* **to** - The end position of the queue display\n\\* **seek** - Seek songs via given keywords\n\n**/remove [from_] {to}** - Removes songs from the queue\n\\* **from_** - The start position of the queue removal, or positions separated by semicolons (i.e. pos1;pos2;...)\n\\* **to** - The end position of the queue removal\n\n**/shuffle {from_} {to}** - Shuffles the queue\n\\* **from_** - The start position of the queue shuffle\n\\* **to** - The end position of the queue shuffle\n\n**/move [from_] [to] {replace}** - Moves the song to the specified position in the queue\n\\* **from_** - The current position of the song in queue\n\\* **to** - The position in queue you wish to move the song to\n\\* **replace** - Replaces the song in the target position\n\n**/clear {from_}** - Clears the queue\n\\* **from_** - The start position of the queue clear\n\n**/skip {to}** - Skips to the next, or to the specified, song in the queue\n\\* **to** - The position in queue you wish to skip to\n\n**/loop {mode}** - Loops either the song or the entire queue\n\\* **mode** - The loop mode you wish to use\n\n**/pause** - Toggles pause for the current song\n\n**/filter {mode} {intensity}** - Applies an audio filter over the songs\n\\* **mode** - The filter mode you wish to use\n\\* **intensity** - Set the filter intensity percentage (35 by default)\n\n**/volume {level}** - Changes the music player volume\n\\* **level** - Set the volume level percentage (50 by default)\n\n**/replay {insert}** - Replays the previous song from the queue\n\\* **insert** - Add the song to the given position in queue\n\n**/seek [timestamp]** - Seek a certain part of the song via timestamp\n\\* **timestamp** - The timestamp to seek (i.e. hours:minutes:seconds)\n\n**/lyrics {title}** - Get lyrics for the currently playing song\n\\* **title** - Get lyrics from the specified title instead",
	"Information.Desc": "**Guild name:** {}\n**Guild ID:** {}\n**Guild members:** {}\n**Guild creation date:** {}\n\n**User name:** {} ({})\n**User ID:** {}\n**User roles:**\n{}\n\n__**Command color coding:**__\n**Dark green** - General values, main command structures etc.\n**Dark red** - Removals, deletions, negative values\n**Dark blue** - Neutral values\n**Green** - Positive values\n**Red** - Errors\n**Blue** - Notes\n**Blurple** - Music player manipulation\n**Purple** - Music queue manipulation, special values\n**Yellow** - Information display",
	"Information.NickList0": [
		"Flesh",
		"Meat",
		"Bolt",
		"Metal",
		"Steel",
		"Worm",
		"Bone",
		"Nerve",
		"Tissue"
	],
	"Information.NickList1": [
		"brain",
		"back",
		"leg",
		"head",
		"face",
		"skin",
		" automaton",
		"toe",
		"bag"
	],
	"Information.Title": "Information",
	"Main.LoadCog": "Cog `{}` loaded successfully.",
	"Main.Mention": "Use the command `/help` to get started.",
	"Main.Perfstat": "**Total guilds:** {}\n**Currently connected to:** {}\n\n**RAM:** {:.4f} ({:.1f}) / {:.4f} GB (100.0 %)\n**CPU:** {} / 100.0 %",
	"Main.ReloadCog": "Cog `{}` reloaded successfully.",
	"Main.RequestTimestamp": "Requested at: {}",
	"Main.UnloadCog": "Cog `{}` unloaded successfully.",
	"Music.AddAlbumSpotify": "Adding to queue **{}** songs from the Spotify album: [{}]({})\nThis will take **a moment**...",
	"Music.AddPlaylist": "Adding to queue **{}** songs from the playlist: [{}]({})\nThis will take **a moment**...",
	"Music.AddPlaylistSoundCloud": "Adding to queue **{}** songs from the SoundCloud playlist: [{}]({})\nThis will take **a moment**...",
	"Music.AddPlaylistSpotify": "Adding to queue **{}** songs from the Spotify playlist: [{}]({})\nThis will take **a moment**...",
	"Music.AddQuery": "**{} to queue:** [{}]({}) [**{}{}**] [**{}**]",
	"Music.Added": "Added",
	"Music.Additional": "+ **{}** more...\n",
	"Music.Album": "album",
	"Music.Back": "**↶ Backing to previous song:** {}",
	"Music.ButtonRequest": "Requested via a button [{}]",
	"Music.Disconnect": "**Disconnecting from current voice channel:** {}",
	"Music.DisconnectAfterSong": "**Disconnecting after current song:** {} [**{}** | **{}**]",
	"Music.Disconnecting": "Disconnecting, until next time.",
	"Music.EmptyChannel": "**Everyone has left the voice channel:** {}",
	"Music.FetchingLyrics": "Fetching lyrics for `{}`\nThis will take **a moment**...",
	"Music.FetchingLyricsNotFound": "No lyrics found for `{}`",
	"Music.FetchingLyricsSuccess": "Successfully fetched lyrics for `{}`",
	"Music.FetchingSongs": "Fetching **{}** songs from the queue [**{}-{}**]\nThis will take **a moment**...",
	"Music.FetchingSongsInQueue": "**In queue:**\n{}\n",
	"Music.FetchingSongsSuccess": "Successfully fetched **{}** out of **{}** songs [**{}-{}**]",
	"Music.Filter": "**⎘ Filter mode is currently:** {} [Intensity **{} %**]",
	"Music.FilterApplying": "**⎘ Applying filter mode:** {} [Intensity **{}%**]\nThis will take **a moment**...",
	"Music.FilterNew": "**⎘ Filter mode is now:** {} [Intensity **{} %**]",
	"Music.Inserted": "Inserted",
	"Music.Loop": "**⟳ Loop mode is currently:** {}",
	"Music.LoopCount": "{}\n\n**Looped:** **{}** time(s)",
	"Music.LoopNew": "**⟳ Loop mode is now:** {}",
	"Music.Looping": "**∞ Now in loop:** [{}]({}) [**{}{}**] [**{}** | **{}**]\n**Next in loop:** [{}]({})",
	"Music.LoopingLast": "**∞ Now in loop:** [{}]({}) [**{}{}**] [**{}** | **{}**]\n**Note:** No further songs in queue.",
	"Music.Lyrics": "**{} Lyrics**\n{}",
	"Music.LyricsTooLong": "**{} Lyrics**\nLyrics too long for Discord. [Find them here.]({})",
	"Music.Move": "**⇄ Moved song:** {} [**{}**] **→** [**{}**]\n**Next in queue:** {}",
	"Music.MoveReplace": "**⇄ Moved song:** {} [**{}**] **→** [**{}**]\n**⊝ Replaced song:** {}\n**Next in queue:** {}",
	"Music.NowPlaying": "⮚ Now playing: {} [{} | {}] [{} | {}]\n⮚ Volume: {}% | Filter: {} [{}%] | Loop: {}",
	"Music.Pause": "**❚❚ Pausing current song:** {}",
	"Music.Playing": "**♪ Now playing:** [{}]({}) [**{}{}**] [**{}** | **{}**]\n**Next in queue:** [{}]({})",
	"Music.PlayingLast": "**♪ Now playing:** [{}]({}) [**{}{}**] [**{}** | **{}**]\n**Note:** No further songs in queue.",
	"Music.Playlist": "playlist",
	"Music.PreShuffled": " **pre-shuffled**",
	"Music.QueueEmpty": "Queue is empty.",
	"Music.Removed": "**⊝ Removed song:** {} [**{}**]\n**Next in queue:** {}",
	"Music.RemovedFollowing": "**⊝ Removed the following song(s) from queue:**\n{}\n**Next in queue:** {}",
	"Music.RemovedFollowingLast": "**⊝ Removed the following song(s) from queue:**\n{}\n**Note:** Queue is now empty.",
	"Music.RemovedLast": "**⊝ Removed song:** {} [**{}**]\n**Note:** Queue is now empty.",
	"Music.RemovedRange": "**⊝ Removed {}** songs from queue [**{}-{}**]\n**Next in queue:** {}",
	"Music.RemovedRangeLast": "**⊝ Removed {}** songs from queue [**{}-{}**]\n**Note:** Queue is now empty.",
	"Music.Replay": "**⭟ Replaying song:** {} [**{}**]\n**Next in queue:** {}",
	"Music.ReplayLast": "**⭟ Replaying song:** {} [**1**]\n**Note:** No further songs in queue.",
	"Music.Resume": "**⯈ Resuming current song:** {}",
	"Music.Seek": "**⌕ Seeking timestamp:** {} | {}\nThis will take **a moment**...",
	"Music.SeekSuccess": "**⌕ Sought timestamp:** {} | {}",
	"Music.SeekingSongs": "Seeking songs containing `{}` from the queue [**{}-{}**]\nThis will take **a moment**...",
	"Music.SeekingSongsInQueue": "**In queue containing** `{}`**:**\n{}\n",
	"Music.SeekingSongsNotFound": "No songs found in queue using the keywords `{}` [**{}-{}**]",
	"Music.SeekingSongsSuccess": "Successfully sought **{}** songs from queue [**{}-{}**]",
	"Music.Shuffle": "**⤮ Shuffled {}** songs in queue [**{}-{}**]\n**Next in queue:** {}",
	"Music.Skip": "**↷ Skipping current song:** {}",
	"Music.SkipRange": "**↷ Skipping current** + **{}** songs in queue [**1-{}**]\n**Next in queue:** {}",
	"Music.SuccessAddPlaylist": "Successfully added **{}** songs to queue{} from the playlist: [{}]({}) [**{}**]",
	"Music.SuccessAddPlaylistSoundCloud": "Successfully added **{}** songs to queue{} from the SoundCloud playlist: [{}]({}) [**~{}**]",
	"Music.SuccessAddPlaylistSpotify": "Successfully added **{}** songs to queue{} from the Spotify {}: [{}]({}) [**~{}**]",
	"Music.TotalInQueue": "**In queue:**\n{}\n{}\n**In total:** **{}** song(s){}",
	"Music.Volume": "**🕪 Volume level is currently:** {} %",
	"Music.VolumeNew": "**🕪 Volume level is now:** {} %",
	"Notes.ConnectToChannel": "**Note:** Please connect to a voice channel first.",
	"Notes.CreateAccount": "**Note:** Please create an account first using the `register` command.",
	"Notes.EntireURL": "**Note:** Please provide the entire URL, including the `https://` prefix.",
	"Notes.InvalidTimestamp": "**Note:** Invalid timestamp format (hours:minutes:seconds).{}",
	"Notes.UnsupportedPlaylist": "**Note:** Unsupported playlist type; adding first song to queue.\n**{} to queue:** [{}]({}) [**{}{}**] [**{}**]",
	"RoleAssign.Initializing": "Initializing **{}** roles...",
	"RoleSelection.Assigned": "You have **assigned** the following roles to yourself:\n",
	"RoleSelection.NoChanges": "No changes made to roles.",
	"RoleSelection.Placeholder": "Waiting for role selection...",
	"RoleSelection.Removed": "You have **removed** the following roles from yourself:\n",
	"RoleSelection.Unassigned": "These roles could not be accessed due to permission issues:\n",
	"Settings.Desc": "**Current language:** {}\n\n**The following languages are available:**\n{}",
	"Settings.Language": "Successfully changed the language of **{}** to **{}**.",
	"Settings.Title": "Settings",
	"Utils.Connecting": "**Connecting to voice channel:** <#{}>",
	"Utils.DefaultingTimestamp": " Defaulting to 00:00.",
	"Utils.Moving": "**Moving to voice channel:** <#{}>"
}